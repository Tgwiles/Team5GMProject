<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_carpenter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw=false;
text="";
choice1="";
choice2="";
choice3="";
choice4="";

image_speed = 0.3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_hero">
      <action>
        <libid>1</libid>
        <id>115</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_bounce</functionname>
        <codestring></codestring>
        <whoName>other</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
if (draw==true) {
    //making all the text boxes relative to view width, so its the same size in all rooms
    draw_set_color(c_black);
    //draw the character's statement/question
    draw_rectangle(view_xview + view_wview*8/1500, view_yview + view_hview - view_wview*360/1500, view_xview + view_wview - view_wview*8/1500, view_yview + view_hview - view_wview*260/1500, false);
    
    //draw the possible responses
    if(choice1 != "") {
        draw_rectangle(view_xview + view_wview*8/1500, view_yview + view_hview - view_wview*250/1500, view_xview + view_wview/2 - view_wview*4/1500, view_yview + view_hview - view_wview*150/1500, false);
    }
    if(choice2 != "") {
        draw_rectangle(view_xview + view_wview/2 + view_wview*4/1500, view_yview + view_hview - view_wview*250/1500, view_xview + view_wview - view_wview*8/1500, view_yview + view_hview - view_wview*150/1500, false);
    }
    if(choice3 != "") {
        draw_rectangle(view_xview + view_wview*8/1500, view_yview + view_hview - view_wview*140/1500, view_xview + view_wview/2 - view_wview*4/1500, view_yview + view_hview - view_wview*40/1500, false);
    }
    if(choice4 != "") {
        draw_rectangle(view_xview + view_wview/2 + view_wview*4/1500, view_yview + view_hview - view_wview*140/1500, view_xview + view_wview - view_wview*8/1500, view_yview + view_hview - view_wview*40/1500, false);
    }
    
    //highlight the selected response
    draw_set_color(c_gray);
    switch (dialogueChoice) {
        case 1: draw_rectangle(view_xview + view_wview*8/1500, view_yview + view_hview - view_wview*250/1500, view_xview + view_wview/2 - view_wview*4/1500, view_yview + view_hview - view_wview*150/1500, false);
                break;
        case 2: draw_rectangle(view_xview + view_wview/2 + view_wview*4/1500, view_yview + view_hview - view_wview*250/1500, view_xview + view_wview - view_wview*8/1500, view_yview + view_hview - view_wview*150/1500, false);
                break;
        case 3: draw_rectangle(view_xview + view_wview*8/1500, view_yview + view_hview - view_wview*140/1500, view_xview + view_wview/2 - view_wview*4/1500, view_yview + view_hview - view_wview*40/1500, false);
                break;
        case 4: draw_rectangle(view_xview + view_wview/2 + view_wview*4/1500, view_yview + view_hview - view_wview*140/1500, view_xview + view_wview - view_wview*8/1500, view_yview + view_hview - view_wview*40/1500, false);
                break;
    }
    draw_set_color(c_white);
    draw_set_valign(fa_center);
    draw_set_halign(fa_center);

    draw_set_font(fnt_small);
    draw_text(view_xview + view_wview/2, view_yview + view_hview - view_wview*310/1500, text);
    draw_text(view_xview + view_wview/4, view_yview + view_hview - view_wview*200/1500, choice1);
    draw_text(view_xview + view_wview*3/4, view_yview + view_hview - view_wview*200/1500, choice2);
    draw_text(view_xview + view_wview/4, view_yview + view_hview - view_wview*90/1500, choice3);
    draw_text(view_xview + view_wview*3/4, view_yview + view_hview - view_wview*90/1500, choice4);
    draw_set_color(c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(conversation==false &amp;&amp; distance_to_object(obj_hero) &lt; 64) {
    conversation=true;
    draw=true;
}
if(finishCarpenter==true &amp;&amp; conversation==true &amp;&amp; distance_to_object(obj_hero) &lt; 64) {
    switch (choice) {
        case 0:
            text = "Thank you for all your help.";
            choice1 = "";
            choice2 = "";
            choice3 = "";
            choice4 = "";
            choice = 99;
            break;
        case 99: //case for ending the conversation
            draw=false;
            conversation=false;
            dialogueChoice=-1;
            choice=0;
            break;
                
        default: text = "something went wrong";
            break;
    }
}
else if(conversation==true &amp;&amp; distance_to_object(obj_hero) &lt; 64) {
    repeat (2)
    switch (choice) {
        case 0:
            if (dialogueChoice==-1) {
                text = "Hey there, squire!  I’m building a sign.";
                choice1 = "Can I help?";
                choice2 = "Cool.  See ya!";
                choice3 = "";
                choice4 = "";
            }
            else if (dialogueChoice==1) {choice = 1;}
            else if (dialogueChoice==2) {choice = 2;}
            
            dialogueChoice = -1;
            break;
        case 1:
            if (hasHammer = false) {
                text = "Sorry, buddy.  You don’t have any tools to help me with.";
                choice1 = "";
                choice2 = "";
                choice3 = "";
                choice4 = "";
                choice = 99;
            }
            else {
                text = "Is that a hammer you got there?  You could be a big help with that!";
                choice = 3;
            }
            choice1 = "";
            choice2 = "";
            choice3 = "";
            choice4 = "";
            dialogueChoice = -1;
            break;
            
        case 2:
            if (dialogueChoice==-1) {
                text = "Bye bye!";
                choice1 = "";
                choice2 = "";
                choice3 = "";
                choice4 = "";
                choice = 99;
                dialogueChoice = -1;
                break;
            }
            
        case 3:
            text = " I’d say we did a good job!  Here, I’ll give you something as a way to say thanks.";
            choice1 = "";
            choice2 = "";
            choice3 = "";
            choice4 = "";
            choice = 4;
            dialogueChoice = -1;
            break;
        case 4:
            choice = 5;
            dialogueChoice = -1;
            break;
        case 5:
            text = "[Received 11 Moneies!]";
            choice1 = "";
            choice2 = "";
            choice3 = "";
            choice4 = "";
            money = money + 11;
            if(finishMathGuy==true) {hasHammer=false;}
            finishCarpenter = true;
            instance_create(640, 192, obj_carpenterSign);
            choice = 99;
            dialogueChoice = -1;
            break;
      
        case 99: //case for ending the conversation
            draw=false;
            conversation=false;
            dialogueChoice=-1;
            choice=0;
            break;
                
        default: text = "something went wrong";
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
